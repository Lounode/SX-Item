plugins {
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
// 全局设置
allprojects {
    apply plugin: 'java'

    group 'io.github.saukiya'
    version '4.0.0'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        //Github Project
        maven { url 'https://jitpack.io' }
        //MythicMobs
        maven { url "https://mvn.lumine.io/repository/maven-public/" }
        //bStats-bukkit
        maven { url 'https://repo.codemc.org/repository/maven-public' }
        //Paper Api
        maven { url 'https://repo.papermc.io/repository/maven-public/' }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
    }

    javadoc {
        options.encoding = 'UTF-8'
        options.charSet = 'UTF-8'
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    tasks.build.finalizedBy shadowJar
}

// 子项目设置
subprojects {
    dependencies {
        compileOnly fileTree('lib')
        compileOnly getRootProject()
    }
    tasks.forEach { task ->
        if (task.name.contains('test') || task.name.contains('Test')) {
            task.enabled = false
        }
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'
    compileOnly 'org.openjdk.nashorn:nashorn-core:15.4'
    compileOnly 'commons-lang:commons-lang:2.6'
    compileOnly 'io.lumine.xikage:MythicMobs:4.12.0'
    compileOnly 'io.lumine:Mythic-Dist:5.2.1'
    compileOnly 'com.github.PlaceholderAPI:PlaceholderAPI:2.10.9'
    implementation 'org.bstats:bstats-bukkit:2.2.1'

    testImplementation 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'
    testImplementation 'commons-lang:commons-lang:2.6'
    testImplementation 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

jar.archiveClassifier = "base"

shadowJar {
    // 过滤未使用的依赖
    minimize()
    // bStats重定向
    relocate('org.bstats', 'github.saukiya.sxitem.bstats')
    // 获得子模块的classes文件
    getSubprojects().forEach(subProject -> {
        from subProject.sourceSets.main.output
    })
}

// 打得出来但是不会发布捏
var deprecated = project(":Module-Deprecated-v3")
task buildJar(type: Jar) {
    from deprecated.sourceSets.main.output
    from rootProject.sourceSets.main.output
}

def createBuildTask(String taskName, String destinationDir, String jarSuffix) {
    tasks.register(taskName, Copy) {
        dependsOn build, shadowJar
        from shadowJar.archiveFile.get().asFile.path
        into(destinationDir).rename { "${project.name}-${jarSuffix}.jar" }
    }
}

// 创建copy任务
createBuildTask('buildLastJar', "$rootDir/build", "Latest")
createBuildTask('buildDebugJar', "$rootDir/run/plugins", "Debug")
// 需要对资源文件中含有的'$'进行转义: $ -> \$
processResources.expand(version: version)
shadowJar.dependsOn buildJar

publishing {
    publications {
        maven(MavenPublication) {
//            from components.java
//            artifact jar
            artifact shadowJar
            artifact buildJar
            artifactId = project.name.toLowerCase()
        }
    }
    repositories {
        if (System.getenv("GITHUB_ACTIONS") != null) {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/saukiya/SX-Item")
                credentials {
                    username = System.getenv("GITHUB_NAME")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        } else {
            mavenLocal()
        }
    }
}